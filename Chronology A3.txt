Group Assignments: 
Jacob: Ai, Bi, Bii
Karen: all of c
Jordan:Dii, Diii
Lenader: Div, e
Ana: Biii, Di

Event Chronology:
On Friday 2/15 Jordan Severinson and I(Jacob Pangonas) worked together to complete
our assigned parts of Assignment 5(a,bi,bii, dii,diii).  
On Monday 2/18 Karen Proft completed parts ci and cii of Assignment 5
On Monday 2/18 Anastasia Primachenko wrote the chronology explanation/lessons learned text

Chronology Explanation/Analysis:
This project was a success because we have finished it and it ran like it should have. However, the team work aspect of the project is needing work. I believe that lands us somewhere in the middle of failure and success. As a team, we have found it extremely difficult to keep the work separated by their assigned teammates. This was because the work is so intertwined that it is very difficult to accomplish anything with just one assigned part of the code. This caused some of the teammates to take over another teammates’ code. 

Lessons:
This project open this team’s eyes on how difficult it is to teamwork on a single program. The two major lessons learned by this team during this exercise are as follows: 

1. We need to become better communicators. Because this project’s classes were so intertwined, it was difficult for one person to run their part of the program without having another teammates’’ code already be ready for them to use. In order to achieve that, this team has to work on creating sub-groups that work on similar code and communicate as needed with each other. 
1a. In order to achieve this goal, we would need to not only assign parts of the project, but also take the time to talk to people whose code will be integrated with and create sub-groups

2. We need to work on our timeline. Working on Github is very difficult when multiple people are working on one class. Just because the work can be integrated, doesn’t mean that the group will be successful. It is very important to be working on the project at the same time as other people who depend on your code so that other people don’t write up your code for you. 
2a. In order to achieve this goal, we would need to set up deadlines with our sub-groups that are comfortable with everyone. This will allow people to finish their code, allow time for testing, and not step over their assigned code to write up someone else’s. 
2b. Moreover, we would need to make sure that the project is ready at least a day before the deadline so that everyone’s code can be tested together to see if it works. 
